@import 'mixins';
@import 'variables';

.view.VideTranscriptionViewer {
    display: flex;
    flex-direction: column-reverse;
    background-color: #ffffff;
    
    .overlayInserter {
        display: block;
    }
    
    .verovioBox {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        padding: 10px;
        box-sizing: border-box;
        
        .svgBox > svg {
            width: 100%;
            height: 100%;
            
            .highlight {
                fill: $noteHighlightColor;
                stroke: $noteHighlightColor;
            }
            
            .supplied * {
                fill: #999999;
                stroke: #999999;
            }
        }
        
        .stateBox > svg {
            width: 100%;
            height: 100%;
        }
        
        .scarHighlight {
            background-color: $spotColor;
            opacity: .2;
            cursor: pointer;
            border-radius: 3px;
        }
        
        .affectedByScar {
            fill: $spotColor;
            stroke: $spotColor;
            /*cursor:pointer;*/
        }
        
        .scarInfo {
            /*background-color: $spotColor;
            opacity: .2;*/
            .scarInfoContent {
                width: 100%;
                display: flex;
                flex-direction: column;
                
                h1 {
                    margin: 0;
                    padding: 0;
                }
                
                p {
                    margin: 0;
                    padding: 0;
                }
            }
        }
        
    }
    
    .transcriptionNavContainer {
        position: absolute;
        height: 3px;
        right: 70px;
        bottom: 36px;
        left: 70px;
        display: flex;
        
        z-index: 0;
        
        /*@include linearGradient(#333333,#151515);*/
        
        .transcriptionNav {
            width: 100%;
            height: 100%;
            
            .displayregion {
                border: none !important;
                background-color: $spotColor !important;
                top: 0 !important;
                height: 100% !important;
            }
        }
        
    }
    
    .navOverlay.scarOpen .transcriptionNavContainer {
        display: none;
    }
    
    .transcriptionNavMenu {
        position:absolute;
        top: 0;/* was: 80px */
        left: 0;
        right: 0;
        height: 30px;
        border-top: .5px solid #999999;
        border-bottom: .5px solid #999999;
        box-sizing: border-box;
        /*background-color: #e5e5e5;*/
        background-color: rgba(60,60,60,.9);
        text-align: right;
        
        .menuButton {
            height: 20px;
            width: 30px;
            margin: 4px;
            box-sizing: border-box;
            padding: 1px 8px;
            border-radius: 5px;
            font-size: 1em;
            color: #cccccc;
            text-shadow: 0 1px 3px #151515;
            
            &:hover {
                color: #999999;
            }
        }
        
        .select-target.select-theme-chosen {
            border: none;
            box-shadow: unset;
            background: unset;
            color: #e5e5e5;
            font-size: 14px;
            position: absolute;
            top: 1px;
            left: 10px;
        }
    }
    
    /* overwrite how active states are rendered in invariance mode */   
    &[data-invariance='visible'] .navOverlay .stateNavigation .statesBox .columnsBox .state.active::before, &[data-invariance='visible'] .navOverlay .stateNavigation .statesBox .columnsBox .state.active::before, &[data-invariance='visible'] .navOverlay .stateNavigation .statesBox .columnsBox .state.active::before, &[data-invariance='visible'] .navOverlay .stateNavigation .statesBox .columnsBox .state.current::before {
        display: none;
    }
    
    .invarianceBtn {
        position: absolute;
        top: 6px;
        right: 120px;/* 45px; */
        cursor: pointer;
        font-size: 90%;
        text-align: left;
        color: #cccccc;
        text-shadow: 0 1px 3px #151515;
        width: 150px;
        @include noSelect();
        
        i.fa-check-square-o {
            position: relative;
            left: 1px;
        }
    }
    
    &[data-invariance='visible'] .invarianceBtn {
        i.fa-check-square-o {
            display: inline-block;
        }
        
        i.fa-square-o {
            display: none;
        }
    }
    
    &[data-invariance='hidden'] .invarianceBtn {
        i.fa-check-square-o {
            display: none;
        }
        
        i.fa-square-o {
            display: inline-block;
        }
    }
}

.previewItem.transcriptionPreview {
    svg * {
        fill: #999999;
        stroke: #999999;
        
        &.highlighted, &.highlighted * {
            fill: #000000;
            stroke: #000000;
        }
    }
}

